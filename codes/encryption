using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'encryption' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static string encryption(string s)
    {
        s = s.Replace(" ","");
        int len = s.Length;
        
        int row = (int)Math.Floor(Math.Sqrt(len));
        int coll = (int)Math.Ceiling(Math.Sqrt(len));
        if(row * coll < len){
            row++;
        }
        List<string> parts = new List<string>(coll);
        for(int i = 0; i < coll; i++){
            var str = new StringBuilder();
            for(int j = i; j < len; j = coll + j){
                str.Append(s[j]);
            }
            parts.Add(str.ToString());
        }
        
        return string.Join(" ", parts);
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string s = Console.ReadLine();

        string result = Result.encryption(s);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
