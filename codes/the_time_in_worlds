using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'timeInWords' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER h
     *  2. INTEGER m
     */

    public static string timeInWords(int h, int m)
    {
         Dictionary<int, string> words = new Dictionary<int, string>()
        {
            {1, "one"}, {2, "two"}, {3, "three"}, {4, "four"}, {5, "five"},
            {6, "six"}, {7, "seven"}, {8, "eight"}, {9, "nine"}, {10, "ten"},
            {11, "eleven"}, {12, "twelve"}, {13, "thirteen"}, {14, "fourteen"},
            {16, "sixteen"}, {17, "seventeen"}, {18, "eighteen"}, {19, "nineteen"},
            {20, "twenty"}, {21, "twenty one"}, {22, "twenty two"},
            {23, "twenty three"}, {24, "twenty four"}, {25, "twenty five"},
            {26, "twenty six"}, {27, "twenty seven"}, {28, "twenty eight"},
            {29, "twenty nine"}
        };
        if (m == 0)
            return $"{words[h]} o' clock";
        else if (m == 15)
            return $"quarter past {words[h]}";
        else if (m == 30)
            return $"half past {words[h]}";
        else if (m < 30)
        {
            string unit = (m == 1) ? "minute" : "minutes";
            return $"{words[m]} {unit} past {words[h]}";
        }
        else
        {
            int remain = 60 - m;
            string nextHour = (h == 12) ? words[1] : words[h + 1];
            if (remain == 15)
                return $"quarter to {nextHour}";
            string unit = (remain == 1) ? "minute" : "minutes";
            return $"{words[remain]} {unit} to {nextHour}";
        }
        
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int h = Convert.ToInt32(Console.ReadLine().Trim());

        int m = Convert.ToInt32(Console.ReadLine().Trim());

        string result = Result.timeInWords(h, m);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
